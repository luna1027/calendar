.background9 {
    overflow: hidden;
}

.mapletree {
    display: flex;
    position: absolute;
    top: -3px;
    left: -5px;
    width: 30vw;
    height: 50vh;
    background-image: url(./image/maple1.png);
    background-size: contain;
    background-repeat: no-repeat;
    filter: drop-shadow(0 0 2px #471510);
    order: 2;
}

@function random_range($min, $max) {
    $rand: random();
    $random_range: $min+floor($rand*(($max - $min )+1));
    @return $random_range;
}

$m: random_range(1, 3);

.maple {
    $total: 60;
    display: flex;
    position: absolute;
    width: 50px;
    height: 50px;
    // background-image:url(./image/leaf_#{$m}.png) ;
    background-size: cover;
    // background-color: #fff;
    // border-radius: 50%;
    filter: drop-shadow(0 0 1px #fdfadd);
    order: 1;


    @for $i from 1 through $total {
        // $random-x: random($limit: 50000)*0.001vw;
        $random-x: random(190000)*0.0001vw;
        $random-offset: random_range(-100000, 10000)*0.001vw;
        $random-x-end: $random-x+$random-offset;
        $random-x-end-yoyo: $random-x+($random-offset/2);
        $random-start: random_range(10, 150)*0.1vh;

        $random-yoyo-time: random_range(3000, 8000)/10000;
        $random-yoyo-y: $random-yoyo-time*100vh;

        $random-scale: random(10000)*0.0001;
        $fall-duration: random_range(30, 60)*1s;
        $fall-delay: random(40)*0.5s;

        $rotate-a: random_range(-360, 360)*1deg;
        $rotate-b: random_range(-360, 360)*1deg;
        $rotate-c: random_range(-360, 360)*1deg;

        &:nth-child(#{$i}) {
            // opacity: random($limit: 10000)*0.0001;
            opacity: random(10000)*0.0001;
            transform: translate($random-x, $random-start) rotateX($rotate-a) rotateZ($rotate-c) scale($random-scale);
            animation: fall-#{$i} $fall-duration linear $fall-delay infinite;
        }

        @keyframes fall-#{$i} {
            #{percentage($random-yoyo-time)} {
                transform: translate($random-x-end, $random-yoyo-y) rotateX($rotate-b) rotateZ($rotate-a) scale($random-scale);
            }

            to {
                transform: translate($random-x-end-yoyo, 100vh) rotateX($rotate-c) rotateZ($rotate-b) scale($random-scale);
            }
        }
    }
}

// scale($random-scale)